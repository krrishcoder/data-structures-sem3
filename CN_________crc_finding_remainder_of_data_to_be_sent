#include <iostream>
#include <string>
#include <stack>
#include <math.h>
#include <bitset>

using namespace std;

static int CRC =  0b1101;            // X^3 + x^1 + 1

int degreCal( unsigned int n){
    
    int count=0;
    while(n){
        count++;
        n = n>>1;
    }
    return count;
    
}

void print( unsigned int input){
    stack<bool> data;
    while(input){
        data.push(input&1);
        input = input>>1;
    }
    while(!data.empty()){
        cout<<data.top();
        data.pop();
    }
}

void printStack(stack<bool> ptr){
    while(!ptr.empty()){
        cout<<ptr.top()<<" , ";
        ptr.pop();
        
    }
    cout<<endl;
    
}

void copyStack(stack<bool> &ptr, stack<bool> temp){
    
    stack<bool> temp2;
    
    while(!temp.empty()){
        temp2.push(temp.top());
        temp.pop();
    }
    
    while(!temp2.empty()){
        ptr.push(temp2.top());
        temp2.pop();
    }
}



//=============================================================
int calCulateRem(int inputInt,int crcDegree){
    
 
    stack<bool> stk1;  //big stack
    stack<bool> stk2;   //crc stack
    stack<bool> stk3;
    int saveOriginal = inputInt;
    
    while(inputInt){
        stk1.push(inputInt&1);
        inputInt = inputInt>>1;
    }
    int crc = CRC;
    
    while(crc){
        stk2.push(crc&1);
        crc = crc>>1;
    }
    
    while(stk1.size() >crcDegree){
        stack<bool> temp;
        copyStack(temp,stk2);
        
        
        while(!temp.empty()){
        stk3.push(stk1.top()^temp.top());
        stk1.pop();
        temp.pop();
        
        }
        while(!stk3.empty()){
            stk1.push(stk3.top());
            stk3.pop();
        }
        
       
        while(stk1.top() != 1){
            stk1.pop();
             if(stk1.size()<=crcDegree){
            break;
        }
        }
        printStack(stk1);
        
    }
int ans=saveOriginal;

  ans = ans>>crcDegree;

    while(!stk1.empty()){
      //  cout<<"top : "<<stk1.top()<<endl;
        if(stk1.top()){
            ans = ans<<1;
            ans = ans|1;
        }else{
             ans = ans<<1;
        }
        stk1.pop();
    }


      
   return ans;
    
}






int main()
{
   string input;
   cin>>input;             // 10110110
   
  unsigned int inputInt=0;
   for(int i= input.length()-1,j=0; i>=0;--i,j++){
       
       if(input[i]=='1'){
                      
           inputInt += 1*pow(2,j);
       }else{
             inputInt += 0*pow(2,j);
       }
       
   }
  

  
   cout<<endl;
   cout<<"you enetred : ";
   print(inputInt);
   
   
   
//appending
  int degreeOfCrc = degreCal(CRC)-1;
  
  for(int i = 0 ;i<degreeOfCrc;++i){
      inputInt=inputInt<<1;
  }
    cout<<endl;
   cout<<"after appending your data became : ";
   print(inputInt);
   
cout<<endl<<endl;
cout<<" answer is : ";
  int ans=calCulateRem( inputInt,degreeOfCrc);
  bitset<32> y(ans);
  cout<<endl;
  cout<<" finally : "<<y<<endl;
   
   

	return 0;
}
